(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.turf = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
function clipPolygon(e,n){for(var r=[],t=0;t<e.length;t++){var i=lineclip.polygon(e[t],n);i.length>0&&(i[0][0]===i[i.length-1][0]&&i[0][1]===i[i.length-1][1]||i.push(i[0]),i.length>=4&&r.push(i))}return r}function getGeom(e){return e.geometry?e.geometry.type:e.type}var helpers=require("@turf/helpers"),lineclip=require("lineclip"),getCoords=require("@turf/invariant").getCoords,lineString=helpers.lineString,multiLineString=helpers.multiLineString,polygon=helpers.polygon,multiPolygon=helpers.multiPolygon;module.exports=function(e,n){var r=getGeom(e),t=getCoords(e),i=e.properties;switch(r){case"LineString":case"MultiLineString":var o=[];return"LineString"===r&&(t=[t]),t.forEach(function(e){lineclip(e,n,o)}),1===o.length?lineString(o[0],i):multiLineString(o,i);case"Polygon":return polygon(clipPolygon(t,n),i);case"MultiPolygon":return multiPolygon(t.map(function(e){return clipPolygon(e,n)}),i);default:throw new Error("geometry "+r+" not supported")}};

},{"@turf/helpers":7,"@turf/invariant":9,"lineclip":18}],2:[function(require,module,exports){
var polygon=require("@turf/helpers").polygon;module.exports=function(o){var r=[o[0],o[1]],e=[o[0],o[3]],n=[o[2],o[3]],l=[o[2],o[1]];return polygon([[r,l,n,e,r]])};
},{"@turf/helpers":7}],3:[function(require,module,exports){
var coordEach=require("@turf/meta").coordEach;module.exports=function(r){var o=[1/0,1/0,-1/0,-1/0];return coordEach(r,function(r){o[0]>r[0]&&(o[0]=r[0]),o[1]>r[1]&&(o[1]=r[1]),o[2]<r[0]&&(o[2]=r[0]),o[3]<r[1]&&(o[3]=r[1])}),o};

},{"@turf/meta":12}],4:[function(require,module,exports){
function doMultiPointAndLineStringCross(e,n){for(var t=!1,r=!1,o=e.coordinates.length,i=0;i<o&&!t&&!r;){for(var s=0;s<n.coordinates.length-1;s++){var a=!0;0!==s&&s!==n.coordinates.length-2||(a=!1),isPointOnLineSegment(n.coordinates[s],n.coordinates[s+1],e.coordinates[i],a)?t=!0:r=!0}i++}return t&&r}function doLineStringsCross(e,n){if(lineIntersect(e,n).features.length>0)for(var t=0;t<e.coordinates.length-1;t++)for(var r=0;r<n.coordinates.length-1;r++){var o=!0;if(0!==r&&r!==n.coordinates.length-2||(o=!1),isPointOnLineSegment(e.coordinates[t],e.coordinates[t+1],n.coordinates[r],o))return!0}return!1}function doLineStringAndPolygonCross(e,n){return lineIntersect(e,polyToLinestring(n)).features.length>0}function isPointInPoly(e,n){return inside(n,e)}function doesMultiPointCrossPoly(e,n){for(var t=!1,r=!1,o=e.coordinates[0].length,i=0;i<o&&t&&r;)isPointInPoly(n,helpers.point(e.coordinates[0][i]),!0)?t=!0:r=!0,i++;return r&&r}function isPointOnLineSegment(e,n,t,r){var o=t[0]-e[0],i=t[1]-e[1],s=n[0]-e[0],a=n[1]-e[1];return 0==o*a-i*s&&(r?Math.abs(s)>=Math.abs(a)?s>0?e[0]<=t[0]&&t[0]<=n[0]:n[0]<=t[0]&&t[0]<=e[0]:a>0?e[1]<=t[1]&&t[1]<=n[1]:n[1]<=t[1]&&t[1]<=e[1]:Math.abs(s)>=Math.abs(a)?s>0?e[0]<t[0]&&t[0]<n[0]:n[0]<t[0]&&t[0]<e[0]:a>0?e[1]<t[1]&&t[1]<n[1]:n[1]<t[1]&&t[1]<e[1])}var helpers=require("@turf/helpers"),inside=require("@turf/inside"),lineIntersect=require("@turf/line-intersect"),polyToLinestring=require("@turf/polygon-to-linestring"),invariant=require("@turf/invariant"),getGeom=invariant.getGeom,getGeomType=invariant.getGeomType;module.exports=function(e,n){var t=getGeomType(e),r=getGeomType(n),o=getGeom(e),i=getGeom(n);switch(t){case"MultiPoint":switch(r){case"LineString":return doMultiPointAndLineStringCross(o,i);case"Polygon":return doesMultiPointCrossPoly(o,i);default:throw new Error("feature2 "+r+" geometry not supported")}case"LineString":switch(r){case"MultiPoint":return doMultiPointAndLineStringCross(i,o);case"LineString":return doLineStringsCross(o,i);case"Polygon":return doLineStringAndPolygonCross(o,i);default:throw new Error("feature2 "+r+" geometry not supported")}case"Polygon":switch(r){case"MultiPoint":return doesMultiPointCrossPoly(i,o);case"LineString":return doLineStringAndPolygonCross(i,o);default:throw new Error("feature2 "+r+" geometry not supported")}default:throw new Error("feature1 "+t+" geometry not supported")}};
},{"@turf/helpers":7,"@turf/inside":8,"@turf/invariant":9,"@turf/line-intersect":10,"@turf/polygon-to-linestring":13}],5:[function(require,module,exports){
var getCoord=require("@turf/invariant").getCoord,radiansToDistance=require("@turf/helpers").radiansToDistance;module.exports=function(t,a,r){var o=Math.PI/180,e=getCoord(t),n=getCoord(a),s=o*(n[1]-e[1]),i=o*(n[0]-e[0]),h=o*e[1],M=o*n[1],d=Math.pow(Math.sin(s/2),2)+Math.pow(Math.sin(i/2),2)*Math.cos(h)*Math.cos(M);return radiansToDistance(2*Math.atan2(Math.sqrt(d),Math.sqrt(1-d)),r)};

},{"@turf/helpers":7,"@turf/invariant":9}],6:[function(require,module,exports){
var bbox=require("@turf/bbox"),bboxPolygon=require("@turf/bbox-polygon");module.exports=function(o){return bboxPolygon(bbox(o))};

},{"@turf/bbox":3,"@turf/bbox-polygon":2}],7:[function(require,module,exports){
function feature(r,e,t,o){if(void 0===r)throw new Error("geometry is required");if(e&&e.constructor!==Object)throw new Error("properties must be an Object");if(t&&4!==t.length)throw new Error("bbox must be an Array of 4 numbers");if(o&&-1===["string","number"].indexOf(typeof o))throw new Error("id must be a number or a string");var n={type:"Feature"};return o&&(n.id=o),t&&(n.bbox=t),n.properties=e||{},n.geometry=r,n}function geometry(r,e,t){if(!r)throw new Error("type is required");if(!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(t&&4!==t.length)throw new Error("bbox must be an Array of 4 numbers");var o;switch(r){case"Point":o=point(e).geometry;break;case"LineString":o=lineString(e).geometry;break;case"Polygon":o=polygon(e).geometry;break;case"MultiPoint":o=multiPoint(e).geometry;break;case"MultiLineString":o=multiLineString(e).geometry;break;case"MultiPolygon":o=multiPolygon(e).geometry;break;default:throw new Error(r+" is invalid")}return t&&(o.bbox=t),o}function point(r,e,t,o){if(!r)throw new Error("No coordinates passed");if(void 0===r.length)throw new Error("Coordinates must be an array");if(r.length<2)throw new Error("Coordinates must be at least 2 numbers long");if(!isNumber(r[0])||!isNumber(r[1]))throw new Error("Coordinates must contain numbers");return feature({type:"Point",coordinates:r},e,t,o)}function polygon(r,e,t,o){if(!r)throw new Error("No coordinates passed");for(var n=0;n<r.length;n++){var i=r[n];if(i.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var a=0;a<i[i.length-1].length;a++){if(0===n&&0===a&&!isNumber(i[0][0])||!isNumber(i[0][1]))throw new Error("Coordinates must contain numbers");if(i[i.length-1][a]!==i[0][a])throw new Error("First and last Position are not equivalent.")}}return feature({type:"Polygon",coordinates:r},e,t,o)}function lineString(r,e,t,o){if(!r)throw new Error("No coordinates passed");if(r.length<2)throw new Error("Coordinates must be an array of two or more positions");if(!isNumber(r[0][1])||!isNumber(r[0][1]))throw new Error("Coordinates must contain numbers");return feature({type:"LineString",coordinates:r},e,t,o)}function featureCollection(r,e,t){if(!r)throw new Error("No features passed");if(!Array.isArray(r))throw new Error("features must be an Array");if(e&&4!==e.length)throw new Error("bbox must be an Array of 4 numbers");if(t&&-1===["string","number"].indexOf(typeof t))throw new Error("id must be a number or a string");var o={type:"FeatureCollection"};return t&&(o.id=t),e&&(o.bbox=e),o.features=r,o}function multiLineString(r,e,t,o){if(!r)throw new Error("No coordinates passed");return feature({type:"MultiLineString",coordinates:r},e,t,o)}function multiPoint(r,e,t,o){if(!r)throw new Error("No coordinates passed");return feature({type:"MultiPoint",coordinates:r},e,t,o)}function multiPolygon(r,e,t,o){if(!r)throw new Error("No coordinates passed");return feature({type:"MultiPolygon",coordinates:r},e,t,o)}function geometryCollection(r,e,t,o){if(!r)throw new Error("geometries is required");if(!Array.isArray(r))throw new Error("geometries must be an Array");return feature({type:"GeometryCollection",geometries:r},e,t,o)}function round(r,e){if(void 0===r||null===r||isNaN(r))throw new Error("num is required");if(e&&!(e>=0))throw new Error("precision must be a positive number");var t=Math.pow(10,e||0);return Math.round(r*t)/t}function radiansToDistance(r,e){if(void 0===r||null===r)throw new Error("radians is required");var t=factors[e||"kilometers"];if(!t)throw new Error("units is invalid");return r*t}function distanceToRadians(r,e){if(void 0===r||null===r)throw new Error("distance is required");var t=factors[e||"kilometers"];if(!t)throw new Error("units is invalid");return r/t}function distanceToDegrees(r,e){return radians2degrees(distanceToRadians(r,e))}function bearingToAngle(r){if(null===r||void 0===r)throw new Error("bearing is required");var e=r%360;return e<0&&(e+=360),e}function radians2degrees(r){if(null===r||void 0===r)throw new Error("radians is required");return r%(2*Math.PI)*180/Math.PI}function degrees2radians(r){if(null===r||void 0===r)throw new Error("degrees is required");return r%360*Math.PI/180}function convertDistance(r,e,t){if(null===r||void 0===r)throw new Error("distance is required");if(!(r>=0))throw new Error("distance must be a positive number");return radiansToDistance(distanceToRadians(r,e),t||"kilometers")}function convertArea(r,e,t){if(null===r||void 0===r)throw new Error("area is required");if(!(r>=0))throw new Error("area must be a positive number");var o=areaFactors[e||"meters"];if(!o)throw new Error("invalid original units");var n=areaFactors[t||"kilometers"];if(!n)throw new Error("invalid final units");return r/o*n}function isNumber(r){return!isNaN(r)&&null!==r&&!Array.isArray(r)}var factors={miles:3960,nauticalmiles:3441.145,degrees:57.2957795,radians:1,inches:250905600,yards:6969600,meters:6373e3,metres:6373e3,centimeters:6373e5,centimetres:6373e5,kilometers:6373,kilometres:6373,feet:20908792.65},areaFactors={kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,centimetres:1e4,millimeter:1e6,acres:247105e-9,miles:3.86e-7,yards:1.195990046,feet:10.763910417,inches:1550.003100006};module.exports={feature:feature,geometry:geometry,featureCollection:featureCollection,geometryCollection:geometryCollection,point:point,multiPoint:multiPoint,lineString:lineString,multiLineString:multiLineString,polygon:polygon,multiPolygon:multiPolygon,radiansToDistance:radiansToDistance,distanceToRadians:distanceToRadians,distanceToDegrees:distanceToDegrees,radians2degrees:radians2degrees,degrees2radians:degrees2radians,bearingToAngle:bearingToAngle,convertDistance:convertDistance,convertArea:convertArea,round:round,isNumber:isNumber};

},{}],8:[function(require,module,exports){
function inRing(r,n,e){var o=!1;n[0][0]===n[n.length-1][0]&&n[0][1]===n[n.length-1][1]&&(n=n.slice(0,n.length-1));for(var t=0,i=n.length-1;t<n.length;i=t++){var g=n[t][0],a=n[t][1],u=n[i][0],f=n[i][1];if(r[1]*(g-u)+a*(u-r[0])+f*(r[0]-g)==0&&(g-r[0])*(u-r[0])<=0&&(a-r[1])*(f-r[1])<=0)return!e;a>r[1]!=f>r[1]&&r[0]<(u-g)*(r[1]-a)/(f-a)+g&&(o=!o)}return o}function inBBox(r,n){return n[0]<=r[0]&&n[1]<=r[1]&&n[2]>=r[0]&&n[3]>=r[1]}var invariant=require("@turf/invariant"),getCoord=invariant.getCoord,getCoords=invariant.getCoords;module.exports=function(r,n,e){if(!r)throw new Error("point is required");if(!n)throw new Error("polygon is required");var o=getCoord(r),t=getCoords(n),i=n.geometry?n.geometry.type:n.type,g=n.bbox;if(g&&!1===inBBox(o,g))return!1;"Polygon"===i&&(t=[t]);for(var a=0,u=!1;a<t.length&&!u;a++)if(inRing(o,t[a][0],e)){for(var f=!1,l=1;l<t[a].length&&!f;)inRing(o,t[a][l],!e)&&(f=!0),l++;f||(u=!0)}return u};
},{"@turf/invariant":9}],9:[function(require,module,exports){
function getCoord(e){if(!e)throw new Error("obj is required");var r=getCoords(e);if(r.length>1&&"number"==typeof r[0]&&"number"==typeof r[1])return r;throw new Error("Coordinate is not a valid Point")}function getCoords(e){if(!e)throw new Error("obj is required");var r;if(e.length?r=e:e.coordinates?r=e.coordinates:e.geometry&&e.geometry.coordinates&&(r=e.geometry.coordinates),r)return containsNumber(r),r;throw new Error("No valid coordinates")}function containsNumber(e){if(e.length>1&&"number"==typeof e[0]&&"number"==typeof e[1])return!0;if(Array.isArray(e[0])&&e[0].length)return containsNumber(e[0]);throw new Error("coordinates must only contain numbers")}function geojsonType(e,r,o){if(!r||!o)throw new Error("type and name required");if(!e||e.type!==r)throw new Error("Invalid input to "+o+": must be a "+r+", given "+e.type)}function featureOf(e,r,o){if(!e)throw new Error("No feature passed");if(!o)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+o+", Feature with geometry required");if(!e.geometry||e.geometry.type!==r)throw new Error("Invalid input to "+o+": must be a "+r+", given "+e.geometry.type)}function collectionOf(e,r,o){if(!e)throw new Error("No featureCollection passed");if(!o)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+o+", FeatureCollection required");for(var t=0;t<e.features.length;t++){var n=e.features[t];if(!n||"Feature"!==n.type||!n.geometry)throw new Error("Invalid input to "+o+", Feature with geometry required");if(!n.geometry||n.geometry.type!==r)throw new Error("Invalid input to "+o+": must be a "+r+", given "+n.geometry.type)}}function getGeom(e){if(!e)throw new Error("geojson is required");if(void 0!==e.geometry)return e.geometry;if(e.coordinates||e.geometries)return e;throw new Error("geojson must be a valid Feature or Geometry Object")}function getGeomType(e){if(!e)throw new Error("geojson is required");var r=getGeom(e);if(r)return r.type}module.exports={geojsonType:geojsonType,collectionOf:collectionOf,featureOf:featureOf,getCoord:getCoord,getCoords:getCoords,containsNumber:containsNumber,getGeom:getGeom,getGeomType:getGeomType};

},{}],10:[function(require,module,exports){
function intersects(e,r){var t=getCoords(e),n=getCoords(r);if(2!==t.length)throw new Error("<intersects> line1 must only contain 2 coordinates");if(2!==n.length)throw new Error("<intersects> line2 must only contain 2 coordinates");var o=t[0][0],i=t[0][1],u=t[1][0],a=t[1][1],s=n[0][0],l=n[0][1],c=n[1][0],f=n[1][1],g=(f-l)*(u-o)-(c-s)*(a-i),h=(c-s)*(i-l)-(f-l)*(o-s),p=(u-o)*(i-l)-(a-i)*(o-s);if(0===g)return null;var m=h/g,y=p/g;if(m>=0&&m<=1&&y>=0&&y<=1){return point([o+m*(u-o),i+m*(a-i)])}return null}var meta=require("@turf/meta"),rbush=require("geojson-rbush"),helpers=require("@turf/helpers"),getCoords=require("@turf/invariant").getCoords,lineSegment=require("@turf/line-segment"),point=helpers.point,featureEach=meta.featureEach,featureCollection=helpers.featureCollection;module.exports=function(e,r){var t={},n=[];if("LineString"===e.type&&(e=helpers.feature(e)),"LineString"===r.type&&(r=helpers.feature(r)),"Feature"===e.type&&"Feature"===r.type&&"LineString"===e.geometry.type&&"LineString"===r.geometry.type&&2===e.geometry.coordinates.length&&2===r.geometry.coordinates.length){var o=intersects(e,r);return o&&n.push(o),featureCollection(n)}var i=rbush();return i.load(lineSegment(r)),featureEach(lineSegment(e),function(e){featureEach(i.search(e),function(r){var o=intersects(e,r);if(o){var i=getCoords(o).join(",");t[i]||(t[i]=!0,n.push(o))}})}),featureCollection(n)};

},{"@turf/helpers":7,"@turf/invariant":9,"@turf/line-segment":11,"@turf/meta":12,"geojson-rbush":17}],11:[function(require,module,exports){
function lineSegment(e,r){var t=[],n=e.geometry;switch(n.type){case"Polygon":t=getCoords(n);break;case"LineString":t=[getCoords(n)]}t.forEach(function(t){createSegments(t,e.properties).forEach(function(e){e.id=r.length,r.push(e)})})}function createSegments(e,r){var t=[];return e.reduce(function(e,n){var o=lineString([e,n],r);return o.bbox=bbox(e,n),t.push(o),n}),t}function bbox(e,r){var t=e[0],n=e[1],o=r[0],i=r[1];return[t<o?t:o,n<i?n:i,t>o?t:o,n>i?n:i]}var helpers=require("@turf/helpers"),getCoords=require("@turf/invariant").getCoords,flattenEach=require("@turf/meta").flattenEach,lineString=helpers.lineString,featureCollection=helpers.featureCollection;module.exports=function(e){if(!e)throw new Error("geojson is required");var r=[];return flattenEach(e,function(e){lineSegment(e,r)}),featureCollection(r)};
},{"@turf/helpers":7,"@turf/invariant":9,"@turf/meta":12}],12:[function(require,module,exports){
"use strict";function coordEach(e,t,r){if(null!==e){var o,n,i,a,c,u,l,s,f,g,p=0,h=0,d=e.type,y="FeatureCollection"===d,m="Feature"===d,E=y?e.features.length:1;for(o=0;o<E;o++)for(f=y?e.features[o].geometry:m?e.geometry:e,g=!!f&&"GeometryCollection"===f.type,l=g?f.geometries.length:1,n=0;n<l;n++){var v=0;if(null!==(u=g?f.geometries[n]:f)){s=u.coordinates;var w=u.type;switch(p=!r||"Polygon"!==w&&"MultiPolygon"!==w?0:1,w){case null:break;case"Point":t(s,h,o,v),h++,v++;break;case"LineString":case"MultiPoint":for(i=0;i<s.length;i++)t(s[i],h,o,v),h++,"MultiPoint"===w&&v++;"LineString"===w&&v++;break;case"Polygon":case"MultiLineString":for(i=0;i<s.length;i++){for(a=0;a<s[i].length-p;a++)t(s[i][a],h,o,v),h++;"MultiLineString"===w&&v++}"Polygon"===w&&v++;break;case"MultiPolygon":for(i=0;i<s.length;i++){for(a=0;a<s[i].length;a++)for(c=0;c<s[i][a].length-p;c++)t(s[i][a][c],h,o,v),h++;v++}break;case"GeometryCollection":for(i=0;i<u.geometries.length;i++)coordEach(u.geometries[i],t,r);break;default:throw new Error("Unknown Geometry Type")}}}}}function coordReduce(e,t,r,o){var n=r;return coordEach(e,function(e,o,i,a){n=0===o&&void 0===r?e:t(n,e,o,i,a)},o),n}function propEach(e,t){var r;switch(e.type){case"FeatureCollection":for(r=0;r<e.features.length;r++)t(e.features[r].properties,r);break;case"Feature":t(e.properties,0)}}function propReduce(e,t,r){var o=r;return propEach(e,function(e,n){o=0===n&&void 0===r?e:t(o,e,n)}),o}function featureEach(e,t){if("Feature"===e.type)t(e,0);else if("FeatureCollection"===e.type)for(var r=0;r<e.features.length;r++)t(e.features[r],r)}function featureReduce(e,t,r){var o=r;return featureEach(e,function(e,n){o=0===n&&void 0===r?e:t(o,e,n)}),o}function coordAll(e){var t=[];return coordEach(e,function(e){t.push(e)}),t}function geomEach(e,t){var r,o,n,i,a,c,u,l,s=0,f="FeatureCollection"===e.type,g="Feature"===e.type,p=f?e.features.length:1;for(r=0;r<p;r++){for(c=f?e.features[r].geometry:g?e.geometry:e,l=f?e.features[r].properties:g?e.properties:{},u=!!c&&"GeometryCollection"===c.type,a=u?c.geometries.length:1,n=0;n<a;n++)if(null!==(i=u?c.geometries[n]:c))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":t(i,s,l);break;case"GeometryCollection":for(o=0;o<i.geometries.length;o++)t(i.geometries[o],s,l);break;default:throw new Error("Unknown Geometry Type")}else t(null,s,l);s++}}function geomReduce(e,t,r){var o=r;return geomEach(e,function(e,n,i){o=0===n&&void 0===r?e:t(o,e,n,i)}),o}function flattenEach(e,t){geomEach(e,function(e,r,o){var n=null===e?null:e.type;switch(n){case null:case"Point":case"LineString":case"Polygon":return void t(feature(e,o),r,0)}var i;switch(n){case"MultiPoint":i="Point";break;case"MultiLineString":i="LineString";break;case"MultiPolygon":i="Polygon"}e.coordinates.forEach(function(e,n){t(feature({type:i,coordinates:e},o),r,n)})})}function flattenReduce(e,t,r){var o=r;return flattenEach(e,function(e,n,i){o=0===n&&0===i&&void 0===r?e:t(o,e,n,i)}),o}function segmentEach(e,t){flattenEach(e,function(e,r,o){var n=0;if(e.geometry){var i=e.geometry.type;"Point"!==i&&"MultiPoint"!==i&&coordReduce(e,function(i,a){var c=lineString([i,a],e.properties);return t(c,r,o,n),n++,a})}})}function segmentReduce(e,t,r){var o=r,n=!1;return segmentEach(e,function(e,i,a,c){o=!1===n&&void 0===r?e:t(o,e,i,a,c),n=!0}),o}function feature(e,t){if(void 0===e)throw new Error("No geometry passed");return{type:"Feature",properties:t||{},geometry:e}}function lineString(e,t){if(!e)throw new Error("No coordinates passed");if(e.length<2)throw new Error("Coordinates must be an array of two or more positions");return{type:"Feature",properties:t||{},geometry:{type:"LineString",coordinates:e}}}function lineEach(e,t){if(!e)throw new Error("geojson is required");var r=e.geometry?e.geometry.type:e.type;if(!r)throw new Error("invalid geojson");if("FeatureCollection"===r)throw new Error("FeatureCollection is not supported");if("GeometryCollection"===r)throw new Error("GeometryCollection is not supported");var o=e.geometry?e.geometry.coordinates:e.coordinates;if(!o)throw new Error("geojson must contain coordinates");switch(r){case"LineString":return void t(o,0,0);case"Polygon":case"MultiLineString":for(var n=0,i=0;i<o.length;i++)"MultiLineString"===r&&(n=i),t(o[i],i,n);return;case"MultiPolygon":for(var a=0;a<o.length;a++)for(var c=0;c<o[a].length;c++)t(o[a][c],c,a);return;default:throw new Error(r+" geometry not supported")}}function lineReduce(e,t,r){var o=r;return lineEach(e,function(e,n,i){o=0===n&&void 0===r?e:t(o,e,n,i)}),o}Object.defineProperty(exports,"__esModule",{value:!0}),exports.coordEach=coordEach,exports.coordReduce=coordReduce,exports.propEach=propEach,exports.propReduce=propReduce,exports.featureEach=featureEach,exports.featureReduce=featureReduce,exports.coordAll=coordAll,exports.geomEach=geomEach,exports.geomReduce=geomReduce,exports.flattenEach=flattenEach,exports.flattenReduce=flattenReduce,exports.segmentEach=segmentEach,exports.segmentReduce=segmentReduce,exports.feature=feature,exports.lineString=lineString,exports.lineEach=lineEach,exports.lineReduce=lineReduce;

},{}],13:[function(require,module,exports){
function coordsToLine(e,r){return e.length>1?multiLineString(e,r):lineString(e[0],r)}function getGeomType(e){return e.geometry?e.geometry.type:e.type}var getCoords=require("@turf/invariant").getCoords,helpers=require("@turf/helpers"),lineString=helpers.lineString,multiLineString=helpers.multiLineString,featureCollection=helpers.featureCollection;module.exports=function(e,r){var o=getGeomType(e),t=getCoords(e);if(r=r||e.properties||{},!t.length)throw new Error("polygon must contain coordinates");switch(o){case"Polygon":return coordsToLine(t,r);case"MultiPolygon":var n=[];return t.forEach(function(e){n.push(coordsToLine(e,r))}),featureCollection(n);default:throw new Error("geom "+o+" not supported")}};

},{"@turf/helpers":7,"@turf/invariant":9}],14:[function(require,module,exports){
var polygonize=require("polygonize");module.exports=function(o){return polygonize(o)};

},{"polygonize":23}],15:[function(require,module,exports){
var distance=require("@turf/distance"),turfBBox=require("@turf/bbox"),helpers=require("@turf/helpers"),point=helpers.point,polygon=helpers.polygon,featureCollection=helpers.featureCollection;module.exports=function(r,e,o,t){var i=[];if(!r)throw new Error("bbox is required");if(Array.isArray(r)||(r=turfBBox(r)),4!==r.length)throw new Error("bbox must contain 4 numbers");var n=r[0],a=r[1],l=r[2],u=r[3],p=distance(point([n,a]),point([l,a]),o),s=distance(point([n,a]),point([n,u]),o),f=Math.ceil(p/e),c=Math.ceil(s/e),h=e/p,b=h*(l-n);!0===t&&(b*=p/e/f);var v=e/s,d=v*(u-a);!0===t&&(d*=s/e/c);for(var x=n,y=0;y<f;y++){for(var g=a,q=0;q<c;q++){var w=polygon([[[x,g],[x,g+d],[x+b,g+d],[x+b,g],[x,g]]]);i.push(w),g+=d}x+=b}return featureCollection(i)};

},{"@turf/bbox":3,"@turf/distance":5,"@turf/helpers":7}],16:[function(require,module,exports){
var distance=require("@turf/distance");module.exports=function(e){var r=e[0],i=e[1],t=e[2],a=e[3];if(distance(e.slice(0,2),[t,i])>=distance(e.slice(0,2),[r,a])){var n=(i+a)/2;return[r,n-(t-r)/2,t,n+(t-r)/2]}var c=(r+t)/2;return[c-(a-i)/2,i,c+(a-i)/2,a]};

},{"@turf/distance":5}],17:[function(require,module,exports){
function bboxPolygon(r){var o=[r[0],r[1]],t=[r[0],r[3]],e=[r[2],r[3]];return{type:"Feature",bbox:r,properties:{},geometry:{type:"Polygon",coordinates:[[o,[r[2],r[1]],e,t,o]]}}}function turfBBox(r){var o=[1/0,1/0,-1/0,-1/0];return coordEach(r,function(r){o[0]>r[0]&&(o[0]=r[0]),o[1]>r[1]&&(o[1]=r[1]),o[2]<r[0]&&(o[2]=r[0]),o[3]<r[1]&&(o[3]=r[1])}),o}var rbush=require("rbush"),meta=require("@turf/meta"),featureEach=meta.featureEach,coordEach=meta.coordEach;module.exports=function(r){var o=rbush(r);return o.insert=function(r){if(Array.isArray(r)){var o=r;r=bboxPolygon(o),r.bbox=o}else r.bbox=r.bbox?r.bbox:turfBBox(r);return rbush.prototype.insert.call(this,r)},o.load=function(r){var o=[];return Array.isArray(r)?r.forEach(function(r){var t=bboxPolygon(r);t.bbox=r,o.push(t)}):featureEach(r,function(r){r.bbox=r.bbox?r.bbox:turfBBox(r),o.push(r)}),rbush.prototype.load.call(this,o)},o.remove=function(r){if(Array.isArray(r)){var o=r;r=bboxPolygon(o),r.bbox=o}return rbush.prototype.remove.call(this,r)},o.clear=function(){return rbush.prototype.clear.call(this)},o.search=function(r){return{type:"FeatureCollection",features:rbush.prototype.search.call(this,this.toBBox(r))}},o.collides=function(r){return rbush.prototype.collides.call(this,this.toBBox(r))},o.all=function(){return{type:"FeatureCollection",features:rbush.prototype.all.call(this)}},o.toJSON=function(){return rbush.prototype.toJSON.call(this)},o.fromJSON=function(r){return rbush.prototype.fromJSON.call(this,r)},o.toBBox=function(r){var o;return o=r.bbox?r.bbox:Array.isArray(r)&&4===r.length?r:turfBBox(r),{minX:o[0],minY:o[1],maxX:o[2],maxY:o[3]}},o};
},{"@turf/meta":12,"rbush":26}],18:[function(require,module,exports){
"use strict";function lineclip(e,i,n){var t,l,o,r,p,u=e.length,c=bitCode(e[0],i),s=[];for(n||(n=[]),t=1;t<u;t++){for(l=e[t-1],o=e[t],r=p=bitCode(o,i);;){if(!(c|r)){s.push(l),r!==p?(s.push(o),t<u-1&&(n.push(s),s=[])):t===u-1&&s.push(o);break}if(c&r)break;c?(l=intersect(l,o,c,i),c=bitCode(l,i)):(o=intersect(l,o,r,i),r=bitCode(o,i))}c=p}return s.length&&n.push(s),n}function polygonclip(e,i){var n,t,l,o,r,p,u;for(t=1;t<=8;t*=2){for(n=[],l=e[e.length-1],o=!(bitCode(l,i)&t),r=0;r<e.length;r++)p=e[r],u=!(bitCode(p,i)&t),u!==o&&n.push(intersect(l,p,t,i)),u&&n.push(p),l=p,o=u;if(e=n,!e.length)break}return n}function intersect(e,i,n,t){return 8&n?[e[0]+(i[0]-e[0])*(t[3]-e[1])/(i[1]-e[1]),t[3]]:4&n?[e[0]+(i[0]-e[0])*(t[1]-e[1])/(i[1]-e[1]),t[1]]:2&n?[t[2],e[1]+(i[1]-e[1])*(t[2]-e[0])/(i[0]-e[0])]:1&n?[t[0],e[1]+(i[1]-e[1])*(t[0]-e[0])/(i[0]-e[0])]:null}function bitCode(e,i){var n=0;return e[0]<i[0]?n|=1:e[0]>i[2]&&(n|=2),e[1]<i[1]?n|=4:e[1]>i[3]&&(n|=8),n}module.exports=lineclip,lineclip.polyline=lineclip,lineclip.polygon=polygonclip;
},{}],19:[function(require,module,exports){
"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,t){for(var i=0;i<t.length;i++){var r=t[i];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,i,r){return i&&e(t.prototype,i),r&&e(t,r),t}}(),_require=require("@turf/helpers"),lineString=_require.lineString,_require2=require("./util"),orientationIndex=_require2.orientationIndex,Edge=function(){function e(t,i){_classCallCheck(this,e),this.from=t,this.to=i,this.next=void 0,this.label=void 0,this.symetric=void 0,this.ring=void 0,this.from.addOuterEdge(this),this.to.addInnerEdge(this)}return _createClass(e,[{key:"getSymetric",value:function(){return this.symetric||(this.symetric=new e(this.to,this.from),this.symetric.symetric=this),this.symetric}}]),_createClass(e,[{key:"deleteEdge",value:function(){this.from.removeOuterEdge(this),this.to.removeInnerEdge(this)}},{key:"isEqual",value:function(e){return this.from.id===e.from.id&&this.to.id===e.to.id}},{key:"toString",value:function(){return"Edge { "+this.from.id+" -> "+this.to.id+" }"}},{key:"toLineString",value:function(){return lineString([this.from.coordinates,this.to.coordinates])}},{key:"compareTo",value:function(e){return orientationIndex(e.from.coordinates,e.to.coordinates,this.to.coordinates)}}]),e}();module.exports=Edge;

},{"./util":24,"@turf/helpers":7}],20:[function(require,module,exports){
"use strict";function _classCallCheck(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,n){for(var o=0;o<n.length;o++){var t=n[o];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}return function(n,o,t){return o&&e(n.prototype,o),t&&e(n,t),n}}(),_require=require("./util"),orientationIndex=_require.orientationIndex,envelopeIsEqual=_require.envelopeIsEqual,envelopeContains=_require.envelopeContains,coordinatesEqual=_require.coordinatesEqual,_require2=require("@turf/helpers"),multiPoint=_require2.multiPoint,polygon=_require2.polygon,point=_require2.point,envelope=require("@turf/envelope"),_inside=require("@turf/inside"),EdgeRing=function(){function e(){_classCallCheck(this,e),this.edges=[],this.polygon=void 0,this.envelope=void 0}return _createClass(e,[{key:"push",value:function(e){this[this.edges.length]=e,this.edges.push(e),this.polygon=this.envelope=void 0}},{key:"get",value:function(e){return this.edges[e]}},{key:"forEach",value:function(e){this.edges.forEach(e)}},{key:"map",value:function(e){return this.edges.map(e)}},{key:"some",value:function(e){return this.edges.some(e)}},{key:"isValid",value:function(){return!0}},{key:"isHole",value:function(){var e=this,n=this.edges.reduce(function(n,o,t){return o.from.coordinates[1]>e.edges[n].from.coordinates[1]&&(n=t),n},0),o=(0===n?this.length:n)-1,t=(n+1)%this.length,i=orientationIndex(this.edges[o].from.coordinates,this.edges[n].from.coordinates,this.edges[t].from.coordinates);return 0===i?this.edges[o].from.coordinates[0]>this.edges[t].from.coordinates[0]:i>0}},{key:"toMultiPoint",value:function(){return multiPoint(this.edges.map(function(e){return e.from.coordinates}))}},{key:"toPolygon",value:function(){if(this.polygon)return this.polygon;var e=this.edges.map(function(e){return e.from.coordinates});return e.push(this.edges[0].from.coordinates),this.polygon=polygon([e])}},{key:"getEnvelope",value:function(){return this.envelope?this.envelope:this.envelope=envelope(this.toPolygon())}},{key:"inside",value:function(e){return _inside(e,this.toPolygon())}},{key:"length",get:function(){return this.edges.length}}],[{key:"findEdgeRingContaining",value:function(e,n){var o=e.getEnvelope(),t=void 0,i=void 0;return n.forEach(function(n){var r=n.getEnvelope();if(i&&(t=i.getEnvelope()),!envelopeIsEqual(r,o)&&envelopeContains(r,o)){var s=e.map(function(e){return e.from.coordinates}).find(function(e){return!n.some(function(n){return coordinatesEqual(e,n.from.coordinates)})});s&&n.inside(point(s))&&(i&&!envelopeContains(t,r)||(i=n))}}),i}}]),e}();module.exports=EdgeRing;

},{"./util":24,"@turf/envelope":6,"@turf/helpers":7,"@turf/inside":8}],21:[function(require,module,exports){
"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function validateGeoJson(e){if(!e)throw new Error("No geojson passed");if("FeatureCollection"!==e.type&&"GeometryCollection"!==e.type&&"MultiLineString"!==e.type&&"LineString"!==e.type&&"Feature"!==e.type)throw new Error("Invalid input type '"+e.type+"'. Geojson must be FeatureCollection, GeometryCollection, LineString, MultiLineString or Feature")}var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),Node=require("./Node"),Edge=require("./Edge"),EdgeRing=require("./EdgeRing"),_require=require("@turf/meta"),flattenEach=_require.flattenEach,coordReduce=_require.coordReduce,_require2=require("@turf/invariant"),featureOf=_require2.featureOf,Graph=function(){function e(){_classCallCheck(this,e),this.edges=[],this.nodes={}}return _createClass(e,[{key:"getNode",value:function(e){var t=Node.buildId(e),n=this.nodes[t];return n||(n=this.nodes[t]=new Node(e)),n}},{key:"addEdge",value:function(e,t){var n=new Edge(e,t),r=n.getSymetric();this.edges.push(n),this.edges.push(r)}}],[{key:"fromGeoJson",value:function(t){validateGeoJson(t);var n=new e;return flattenEach(t,function(e){featureOf(e,"LineString","Graph::fromGeoJson"),coordReduce(e,function(e,t){if(e){var r=n.getNode(e),i=n.getNode(t);n.addEdge(r,i)}return t})}),n}}]),_createClass(e,[{key:"deleteDangles",value:function(){var e=this;Object.keys(this.nodes).map(function(t){return e.nodes[t]}).forEach(function(t){return e._removeIfDangle(t)})}},{key:"_removeIfDangle",value:function(e){var t=this;if(e.innerEdges.length<=1){var n=e.getOuterEdges().map(function(e){return e.to});this.removeNode(e),n.forEach(function(e){return t._removeIfDangle(e)})}}},{key:"deleteCutEdges",value:function(){var e=this;this._computeNextCWEdges(),this._findLabeledEdgeRings(),this.edges.forEach(function(t){t.label===t.symetric.label&&(e.removeEdge(t.symetric),e.removeEdge(t))})}},{key:"_computeNextCWEdges",value:function(e){var t=this;void 0===e?Object.keys(this.nodes).forEach(function(e){return t._computeNextCWEdges(t.nodes[e])}):e.getOuterEdges().forEach(function(t,n){e.getOuterEdge((0===n?e.getOuterEdges().length:n)-1).symetric.next=t})}},{key:"_computeNextCCWEdges",value:function(e,t){for(var n=e.getOuterEdges(),r=void 0,i=void 0,o=n.length-1;o>=0;--o){var u=n[o],a=u.symetric,s=void 0,d=void 0;u.label===t&&(s=u),a.label===t&&(d=a),s&&d&&(d&&(i=d),s&&(i&&(i.next=s,i=void 0),r||(r=s)))}i&&(i.next=r)}},{key:"_findLabeledEdgeRings",value:function(){var e=[],t=0;return this.edges.forEach(function(n){if(!(n.label>=0)){e.push(n);var r=n;do{r.label=t,r=r.next}while(!n.isEqual(r));t++}}),e}},{key:"getEdgeRings",value:function(){var e=this;this._computeNextCWEdges(),this.edges.forEach(function(e){e.label=void 0}),this._findLabeledEdgeRings().forEach(function(t){e._findIntersectionNodes(t).forEach(function(n){e._computeNextCCWEdges(n,t.label)})});var t=[];return this.edges.forEach(function(n){n.ring||t.push(e._findEdgeRing(n))}),t}},{key:"_findIntersectionNodes",value:function(e){var t=[],n=e;do{!function(){var r=0;n.from.getOuterEdges().forEach(function(t){t.label===e.label&&++r}),r>1&&t.push(n.from),n=n.next}()}while(!e.isEqual(n));return t}},{key:"_findEdgeRing",value:function(e){var t=e,n=new EdgeRing;do{n.push(t),t.ring=n,t=t.next}while(!e.isEqual(t));return n}},{key:"removeNode",value:function(e){var t=this;e.getOuterEdges().forEach(function(e){return t.removeEdge(e)}),e.innerEdges.forEach(function(e){return t.removeEdge(e)}),delete this.nodes[e.id]}},{key:"removeEdge",value:function(e){this.edges=this.edges.filter(function(t){return!t.isEqual(e)}),e.deleteEdge()}}]),e}();module.exports=Graph;

},{"./Edge":19,"./EdgeRing":20,"./Node":22,"@turf/invariant":9,"@turf/meta":12}],22:[function(require,module,exports){
"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,t){for(var o=0;o<t.length;o++){var r=t[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,o,r){return o&&e(t.prototype,o),r&&e(t,r),t}}(),_require=require("./util"),orientationIndex=_require.orientationIndex,Node=function(){function e(t){_classCallCheck(this,e),this.id=e.buildId(t),this.coordinates=t,this.innerEdges=[],this.outerEdges=[],this.outerEdgesSorted=!1}return _createClass(e,null,[{key:"buildId",value:function(e){return e.join(",")}}]),_createClass(e,[{key:"removeInnerEdge",value:function(e){this.innerEdges=this.innerEdges.filter(function(t){return t.from.id!==e.from.id})}},{key:"removeOuterEdge",value:function(e){this.outerEdges=this.outerEdges.filter(function(t){return t.to.id!==e.to.id})}},{key:"addOuterEdge",value:function(e){this.outerEdges.push(e),this.outerEdgesSorted=!1}},{key:"sortOuterEdges",value:function(){var e=this;this.outerEdgesSorted||(this.outerEdges.sort(function(t,o){var r=t.to,n=o.to;if(r.coordinates[0]-e.coordinates[0]>=0&&n.coordinates[0]-e.coordinates[0]<0)return 1;if(r.coordinates[0]-e.coordinates[0]<0&&n.coordinates[0]-e.coordinates[0]>=0)return-1;if(r.coordinates[0]-e.coordinates[0]==0&&n.coordinates[0]-e.coordinates[0]==0)return r.coordinates[1]-e.coordinates[1]>=0||n.coordinates[1]-e.coordinates[1]>=0?r.coordinates[1]-n.coordinates[1]:n.coordinates[1]-r.coordinates[1];var i=orientationIndex(e.coordinates,r.coordinates,n.coordinates);return i<0?1:i>0?-1:Math.pow(r.coordinates[0]-e.coordinates[0],2)+Math.pow(r.coordinates[1]-e.coordinates[1],2)-(Math.pow(n.coordinates[0]-e.coordinates[0],2)+Math.pow(n.coordinates[1]-e.coordinates[1],2))}),this.outerEdgesSorted=!0)}},{key:"getOuterEdges",value:function(){return this.sortOuterEdges(),this.outerEdges}},{key:"getOuterEdge",value:function(e){return this.sortOuterEdges(),this.outerEdges[e]}},{key:"addInnerEdge",value:function(e){this.innerEdges.push(e)}}]),e}();module.exports=Node;
},{"./util":24}],23:[function(require,module,exports){
"use strict";var Graph=require("./Graph"),EdgeRing=require("./EdgeRing"),_require=require("@turf/helpers"),featureCollection=_require.featureCollection;module.exports=function(e){var r=Graph.fromGeoJson(e);r.deleteDangles(),r.deleteCutEdges();var n=[],i=[];return r.getEdgeRings().filter(function(e){return e.isValid()}).forEach(function(e){e.isHole()?n.push(e):i.push(e)}),n.forEach(function(e){EdgeRing.findEdgeRingContaining(e,i)&&i.push(e)}),featureCollection(i.map(function(e){return e.toPolygon()}))};

},{"./EdgeRing":20,"./Graph":21,"@turf/helpers":7}],24:[function(require,module,exports){
"use strict";function orientationIndex(n,e,t){var r=e[0]-n[0],o=e[1]-n[1],i=t[0]-e[0],a=t[1]-e[1];return Math.sign(r*a-i*o)}function envelopeIsEqual(n,e){var t=n.geometry.coordinates.map(function(n){return n[0]}),r=n.geometry.coordinates.map(function(n){return n[1]}),o=e.geometry.coordinates.map(function(n){return n[0]}),i=e.geometry.coordinates.map(function(n){return n[1]});return Math.max(null,t)===Math.max(null,o)&&Math.max(null,r)===Math.max(null,i)&&Math.min(null,t)===Math.min(null,o)&&Math.min(null,r)===Math.min(null,i)}function envelopeContains(n,e){return e.geometry.coordinates[0].every(function(e){return inside(point(e),n)})}function coordinatesEqual(n,e){return n[0]===e[0]&&n[1]===e[1]}var inside=require("@turf/inside"),_require=require("@turf/helpers"),point=_require.point;module.exports={orientationIndex:orientationIndex,envelopeIsEqual:envelopeIsEqual,envelopeContains:envelopeContains,coordinatesEqual:coordinatesEqual};

},{"@turf/helpers":7,"@turf/inside":8}],25:[function(require,module,exports){
"use strict";function partialSort(a,t,r,o,p){for(r=r||0,o=o||a.length-1,p=p||defaultCompare;o>r;){if(o-r>600){var f=o-r+1,e=t-r+1,l=Math.log(f),s=.5*Math.exp(2*l/3),i=.5*Math.sqrt(l*s*(f-s)/f)*(e-f/2<0?-1:1);partialSort(a,t,Math.max(r,Math.floor(t-e*s/f+i)),Math.min(o,Math.floor(t+(f-e)*s/f+i)),p)}var n=a[t],h=r,u=o;for(swap(a,r,t),p(a[o],n)>0&&swap(a,r,o);h<u;){for(swap(a,h,u),h++,u--;p(a[h],n)<0;)h++;for(;p(a[u],n)>0;)u--}0===p(a[r],n)?swap(a,r,u):(u++,swap(a,u,o)),u<=t&&(r=u+1),t<=u&&(o=u-1)}}function swap(a,t,r){var o=a[t];a[t]=a[r],a[r]=o}function defaultCompare(a,t){return a<t?-1:a>t?1:0}module.exports=partialSort;
},{}],26:[function(require,module,exports){
"use strict";function rbush(t,i){if(!(this instanceof rbush))return new rbush(t,i);this._maxEntries=Math.max(4,t||9),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),i&&this._initFormat(i),this.clear()}function findItem(t,i,n){if(!n)return i.indexOf(t);for(var e=0;e<i.length;e++)if(n(t,i[e]))return e;return-1}function calcBBox(t,i){distBBox(t,0,t.children.length,i,t)}function distBBox(t,i,n,e,a){a||(a=createNode(null)),a.minX=1/0,a.minY=1/0,a.maxX=-1/0,a.maxY=-1/0;for(var r,h=i;h<n;h++)r=t.children[h],extend(a,t.leaf?e(r):r);return a}function extend(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function compareNodeMinX(t,i){return t.minX-i.minX}function compareNodeMinY(t,i){return t.minY-i.minY}function bboxArea(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function bboxMargin(t){return t.maxX-t.minX+(t.maxY-t.minY)}function enlargedArea(t,i){return(Math.max(i.maxX,t.maxX)-Math.min(i.minX,t.minX))*(Math.max(i.maxY,t.maxY)-Math.min(i.minY,t.minY))}function intersectionArea(t,i){var n=Math.max(t.minX,i.minX),e=Math.max(t.minY,i.minY),a=Math.min(t.maxX,i.maxX),r=Math.min(t.maxY,i.maxY);return Math.max(0,a-n)*Math.max(0,r-e)}function contains(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function intersects(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function createNode(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function multiSelect(t,i,n,e,a){for(var r,h=[i,n];h.length;)n=h.pop(),i=h.pop(),n-i<=e||(r=i+Math.ceil((n-i)/e/2)*e,quickselect(t,r,i,n,a),h.push(i,r,r,n))}module.exports=rbush;var quickselect=require("quickselect");rbush.prototype={all:function(){return this._all(this.data,[])},search:function(t){var i=this.data,n=[],e=this.toBBox;if(!intersects(t,i))return n;for(var a,r,h,o,s=[];i;){for(a=0,r=i.children.length;a<r;a++)h=i.children[a],o=i.leaf?e(h):h,intersects(t,o)&&(i.leaf?n.push(h):contains(t,o)?this._all(h,n):s.push(h));i=s.pop()}return n},collides:function(t){var i=this.data,n=this.toBBox;if(!intersects(t,i))return!1;for(var e,a,r,h,o=[];i;){for(e=0,a=i.children.length;e<a;e++)if(r=i.children[e],h=i.leaf?n(r):r,intersects(t,h)){if(i.leaf||contains(t,h))return!0;o.push(r)}i=o.pop()}return!1},load:function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0,n=t.length;i<n;i++)this.insert(t[i]);return this}var e=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===e.height)this._splitRoot(this.data,e);else{if(this.data.height<e.height){var a=this.data;this.data=e,e=a}this._insert(e,this.data.height-e.height-1,!0)}else this.data=e;return this},insert:function(t){return t&&this._insert(t,this.data.height-1),this},clear:function(){return this.data=createNode([]),this},remove:function(t,i){if(!t)return this;for(var n,e,a,r,h=this.data,o=this.toBBox(t),s=[],c=[];h||s.length;){if(h||(h=s.pop(),e=s[s.length-1],n=c.pop(),r=!0),h.leaf&&-1!==(a=findItem(t,h.children,i)))return h.children.splice(a,1),s.push(h),this._condense(s),this;r||h.leaf||!contains(h,o)?e?(n++,h=e.children[n],r=!1):h=null:(s.push(h),c.push(n),n=0,e=h,h=h.children[0])}return this},toBBox:function(t){return t},compareMinX:compareNodeMinX,compareMinY:compareNodeMinY,toJSON:function(){return this.data},fromJSON:function(t){return this.data=t,this},_all:function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},_build:function(t,i,n,e){var a,r=n-i+1,h=this._maxEntries;if(r<=h)return a=createNode(t.slice(i,n+1)),calcBBox(a,this.toBBox),a;e||(e=Math.ceil(Math.log(r)/Math.log(h)),h=Math.ceil(r/Math.pow(h,e-1))),a=createNode([]),a.leaf=!1,a.height=e;var o,s,c,l,m=Math.ceil(r/h),u=m*Math.ceil(Math.sqrt(h));for(multiSelect(t,i,n,u,this.compareMinX),o=i;o<=n;o+=u)for(c=Math.min(o+u-1,n),multiSelect(t,o,c,m,this.compareMinY),s=o;s<=c;s+=m)l=Math.min(s+m-1,c),a.children.push(this._build(t,s,l,e-1));return calcBBox(a,this.toBBox),a},_chooseSubtree:function(t,i,n,e){for(var a,r,h,o,s,c,l,m;;){if(e.push(i),i.leaf||e.length-1===n)break;for(l=m=1/0,a=0,r=i.children.length;a<r;a++)h=i.children[a],s=bboxArea(h),c=enlargedArea(t,h)-s,c<m?(m=c,l=s<l?s:l,o=h):c===m&&s<l&&(l=s,o=h);i=o||i.children[0]}return i},_insert:function(t,i,n){var e=this.toBBox,a=n?t:e(t),r=[],h=this._chooseSubtree(a,this.data,i,r);for(h.children.push(t),extend(h,a);i>=0&&r[i].children.length>this._maxEntries;)this._split(r,i),i--;this._adjustParentBBoxes(a,r,i)},_split:function(t,i){var n=t[i],e=n.children.length,a=this._minEntries;this._chooseSplitAxis(n,a,e);var r=this._chooseSplitIndex(n,a,e),h=createNode(n.children.splice(r,n.children.length-r));h.height=n.height,h.leaf=n.leaf,calcBBox(n,this.toBBox),calcBBox(h,this.toBBox),i?t[i-1].children.push(h):this._splitRoot(n,h)},_splitRoot:function(t,i){this.data=createNode([t,i]),this.data.height=t.height+1,this.data.leaf=!1,calcBBox(this.data,this.toBBox)},_chooseSplitIndex:function(t,i,n){var e,a,r,h,o,s,c,l;for(s=c=1/0,e=i;e<=n-i;e++)a=distBBox(t,0,e,this.toBBox),r=distBBox(t,e,n,this.toBBox),h=intersectionArea(a,r),o=bboxArea(a)+bboxArea(r),h<s?(s=h,l=e,c=o<c?o:c):h===s&&o<c&&(c=o,l=e);return l},_chooseSplitAxis:function(t,i,n){var e=t.leaf?this.compareMinX:compareNodeMinX,a=t.leaf?this.compareMinY:compareNodeMinY;this._allDistMargin(t,i,n,e)<this._allDistMargin(t,i,n,a)&&t.children.sort(e)},_allDistMargin:function(t,i,n,e){t.children.sort(e);var a,r,h=this.toBBox,o=distBBox(t,0,i,h),s=distBBox(t,n-i,n,h),c=bboxMargin(o)+bboxMargin(s);for(a=i;a<n-i;a++)r=t.children[a],extend(o,t.leaf?h(r):r),c+=bboxMargin(o);for(a=n-i-1;a>=i;a--)r=t.children[a],extend(s,t.leaf?h(r):r),c+=bboxMargin(s);return c},_adjustParentBBoxes:function(t,i,n){for(var e=n;e>=0;e--)extend(i[e],t)},_condense:function(t){for(var i,n=t.length-1;n>=0;n--)0===t[n].children.length?n>0?(i=t[n-1].children,i.splice(i.indexOf(t[n]),1)):this.clear():calcBBox(t[n],this.toBBox)},_initFormat:function(t){var i=["return a"," - b",";"];this.compareMinX=new Function("a","b",i.join(t[0])),this.compareMinY=new Function("a","b",i.join(t[1])),this.toBBox=new Function("a","return {minX: a"+t[0]+", minY: a"+t[1]+", maxX: a"+t[2]+", maxY: a"+t[3]+"};")}};
},{"quickselect":25}],27:[function(require,module,exports){
module.exports={booleanCrosses:require("@turf/boolean-crosses"),polygonize:require("@turf/polygonize"),helpers:require("@turf/helpers"),squareGrid:require("@turf/square-grid"),square:require("@turf/square"),meta:require("@turf/meta"),bboxClip:require("@turf/bbox-clip")};
},{"@turf/bbox-clip":1,"@turf/boolean-crosses":4,"@turf/helpers":7,"@turf/meta":12,"@turf/polygonize":14,"@turf/square":16,"@turf/square-grid":15}]},{},[27])(27)
});